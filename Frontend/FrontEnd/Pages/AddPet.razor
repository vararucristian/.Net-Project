@page "/add"
@layout MainLayout
@inject HttpClient Http
@inject LocationService  LocationService
@inject NavigationManager NavigationManager

<div class="bg-white shadow-md rounded px-8 pt-8 mt-64 pb-8 mb-4 flex flex-col my-2">
    <div class="-mx-3 md:flex mb-6">

        <div class="md:w-full px-3">
            <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-last-name">
                Name
            </label>
            <input @bind="petInfo.Name" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4" id="grid-last-name" type="text" placeholder="Doe">
        </div>
    </div>
    <div class="-mx-3 md:flex mb-6">
        <div class="md:w-full px-3">

            <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-textarea">
                Description
            </label>

            <textarea @bind="petInfo.Description" class="w-full shadow-inner p-4 border-0 appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4 mb-3" placeholder="" rows="6"></textarea>
        </div>
    </div>
    <div class="-mx-3 md:flex mb-2">
        <div class="md:w-1/2 px-3 mb-6 md:mb-0">
            <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-city">
                Genre
            </label>
            <div class="relative">
                <select @bind="petInfo.Genre" class="block appearance-none w-full bg-grey-lighter border border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded" id="genre-selector">
                    <option value="@Gen.Male">Male</option>
                    <option value="@Gen.Female">Female</option>

                </select>
                <div class="pointer-events-none absolute pin-y pin-r flex items-center px-2 text-grey-darker">
                    <svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" /></svg>
                </div>
            </div>
        </div>

        <div class="md:w-1/2 px-3">

            <h3>You are here</h3>
            <div>
                Lat: @location?.Latitude <br />
                Long: @location?.Longitude <br />
                <!-- Accuracy: @location?.Accuracy <br />-->
            </div>

        </div>
    </div>
    <div class="-mx-3 md:flex mb-6">
        <div class="md:w-1/2 px-3">
            <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-state">
                Type
            </label>
            <div class="relative">
                <select @bind="petInfo.Species" class="block appearance-none w-full bg-grey-lighter border border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded" id="grid-state">
                    <option value="@Animal.Dog">Dog</option>
                    <option value="@Animal.Cat">Cat</option>
                    <option value="@Animal.Fish">Fish</option>
                    <option value="@Animal.Hamster">Hamster</option>
                    <option value="@Animal.Parrot">Parrot</option>
                    <option value="@Animal.Rabbit">Rabbit</option>
                    <option value="@Animal.Turtle">Turtle</option>
                </select>
                <div class="pointer-events-none absolute pin-y pin-r flex items-center px-2 text-grey-darker">
                    <svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" /></svg>
                </div>
            </div>
        </div>
        <div class="md:w-1/2 px-3">
            <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-zip">
                Date of birth
            </label>
            <input @bind="petInfo.BirthDate" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4" id="grid-zip" type="date" placeholder="3">
        </div>
    </div>

    <div class="-mx-3 md:flex mb-6">

        <div class="md:w-full px-3">
            <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-last-name">
                Add Photos
            </label>
            <label class="w-full w-64 flex flex-col items-center px-4 py-6 bg-white text-blue rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue hover:text-white">
                <svg class="w-8 h-8 items-center" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                    <path d="M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z" />
                </svg>
                <span class="mt-2 text-base leading-normal">Select a file</span>
                <input type='file' class="hidden" />
            </label>
        </div>

    </div>
    <div class="mb-6 text-center">
        <button @onclick="CreatePet" class="w-full px-4 py-2 font-bold text-white bg-blue-500 rounded-lg shadow-lg hover:bg-blue-700 hover:bg-blue hover:text-white border border-blue text-blue" type="button">
            Submit
        </button>
    </div>
    @if (response != null && response.success == false)
    {
        <p>Error while submiting your pet.</p>
    }
    
</div>




@code
{
    private string apiUrl = "https://localhost:7000/api/pets/";
    Location location;
    Animal animal;
    CreatePetInfo petInfo = new CreatePetInfo();
    CreatePetResponse response = null;
    protected override async Task OnInitializedAsync()
    {
        location = await LocationService.GetLocationAsync();
    }
    public enum Animal
    {
        Dog,
        Cat,
        Fish,
        Turtle,
        Rabbit,
        Parrot,
        Hamster
    }
    public enum Gen
    {
        Male,
        Female
    }
    public class CreatePetInfo
    {

        public string Name { get; set; }
        public Animal Species { get; set; }
        public Gen Genre { get; set; }
        public string Username { get; set; }
        public string Description { get; set; }
        public DateTime BirthDate { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }

    }
    private async void CreatePet()
    {
        petInfo.Longitude = (double)location.Longitude;
        petInfo.Latitude = (double)location.Latitude;
        petInfo.Username = "mike97m";
        response = await Http.PostJsonAsync<CreatePetResponse>(apiUrl, petInfo);
        if (response.success)
            NavigationManager.NavigateTo("/");

}

    public class CreatePetResponse
    {
        public bool success { get; set; }
    }
}